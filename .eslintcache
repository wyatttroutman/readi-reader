[{"H:\\Repositories\\electron-reader\\src\\index.js":"1","H:\\Repositories\\electron-reader\\src\\App.js":"2","H:\\Repositories\\electron-reader\\src\\components\\library\\Library.js":"3","H:\\Repositories\\electron-reader\\src\\components\\reader\\Reader.js":"4","H:\\Repositories\\electron-reader\\src\\components\\library\\tools\\LibraryTools.js":"5","H:\\Repositories\\electron-reader\\src\\recoil\\atoms.js":"6","H:\\Repositories\\electron-reader\\src\\components\\library\\catelogue\\LibraryCatelogue.js":"7","H:\\Repositories\\electron-reader\\src\\components\\library\\tools\\ScanDirectoryCard.js":"8","H:\\Repositories\\electron-reader\\src\\components\\Page.js":"9","H:\\Repositories\\electron-reader\\src\\components\\library\\tools\\ImportBookCard.js":"10","H:\\Repositories\\electron-reader\\src\\components\\library\\LibraryContainer.js":"11","H:\\Repositories\\electron-reader\\src\\components\\toolbar\\PageHeaderToolbar.js":"12","H:\\Repositories\\electron-reader\\src\\components\\toolbar\\EnhancedTableToolbar.js":"13","H:\\Repositories\\electron-reader\\src\\components\\toolbar\\SimplePageToolbar.js":"14","H:\\Repositories\\electron-reader\\src\\components\\library\\LibraryFooter.js":"15","H:\\Repositories\\electron-reader\\src\\components\\native\\OpenDirectoryButton.js":"16","H:\\Repositories\\electron-reader\\src\\components\\toolbar\\useToolbarStyles.js":"17","H:\\Repositories\\electron-reader\\src\\components\\native\\OpenBookButton.js":"18","H:\\Repositories\\electron-reader\\src\\components\\toolbar\\PageToolbar.js":"19","H:\\Repositories\\electron-reader\\src\\components\\library\\Console.js":"20","H:\\Repositories\\electron-reader\\src\\components\\native\\OpenFileSystemButton.js":"21","H:\\Repositories\\electron-reader\\src\\components\\native\\OpenFileButton.js":"22","H:\\Repositories\\electron-reader\\src\\components\\library\\catelogue\\ActionPanel.js":"23"},{"size":405,"mtime":1611518526227,"results":"24","hashOfConfig":"25"},{"size":2404,"mtime":1611178375350,"results":"26","hashOfConfig":"25"},{"size":389,"mtime":1611105092375,"results":"27","hashOfConfig":"25"},{"size":1035,"mtime":1611522330038,"results":"28","hashOfConfig":"25"},{"size":1394,"mtime":1611166586687,"results":"29","hashOfConfig":"25"},{"size":3727,"mtime":1611521997337,"results":"30","hashOfConfig":"25"},{"size":9407,"mtime":1611522121052,"results":"31","hashOfConfig":"25"},{"size":747,"mtime":1611162305968,"results":"32","hashOfConfig":"25"},{"size":504,"mtime":1611161725902,"results":"33","hashOfConfig":"25"},{"size":639,"mtime":1611168889993,"results":"34","hashOfConfig":"25"},{"size":2348,"mtime":1611251865227,"results":"35","hashOfConfig":"25"},{"size":205,"mtime":1611162324198,"results":"36","hashOfConfig":"25"},{"size":1774,"mtime":1611006608875,"results":"37","hashOfConfig":"25"},{"size":286,"mtime":1611162359668,"results":"38","hashOfConfig":"25"},{"size":1685,"mtime":1611355092176,"results":"39","hashOfConfig":"25"},{"size":738,"mtime":1611167253379,"results":"40","hashOfConfig":"25"},{"size":612,"mtime":1611006526930,"results":"41","hashOfConfig":"25"},{"size":1661,"mtime":1611522447398,"results":"42","hashOfConfig":"25"},{"size":821,"mtime":1611161806829,"results":"43","hashOfConfig":"25"},{"size":529,"mtime":1611105136623,"results":"44","hashOfConfig":"25"},{"size":763,"mtime":1611167165102,"results":"45","hashOfConfig":"25"},{"size":500,"mtime":1611167332652,"results":"46","hashOfConfig":"25"},{"size":1865,"mtime":1611523301289,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1so6cz6",{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"50"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"50"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"H:\\Repositories\\electron-reader\\src\\index.js",[],["103","104"],"H:\\Repositories\\electron-reader\\src\\App.js",["105","106","107","108"],"import React from \"react\";\nimport \"./App.css\";\nimport {\n  RecoilRoot,\n  atom,\n  selector,\n  useRecoilState,\n  useRecoilValue,\n} from \"recoil\";\nimport { HashRouter, Switch, Route, Link, Redirect } from \"react-router-dom\";\n\nimport LibraryBooksIcon from \"@material-ui/icons/LibraryBooks\";\nimport DynamicFeedIcon from \"@material-ui/icons/DynamicFeed\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\n\nimport Library from \"./components/library/Library\";\nimport Reader from \"./components/reader/Reader\";\nimport LibraryCatelogue from \"./components/library/catelogue/LibraryCatelogue\";\nimport LibraryTools from \"./components/library/tools/LibraryTools\";\n\nimport { tabIndexState } from \"./recoil/atoms\";\n\nconst tabs = [\n  { label: \"Library\", path: \"/\" },\n  { label: \"Reader\", path: \"/reader\" },\n];\n\nconst libraryRoutes = [\n  {\n    label: \"Catelogue\",\n    icon: <LibraryBooksIcon />,\n    path: \"/library/catelogue\",\n    component: LibraryCatelogue,\n  },\n  {\n    label: \"Tools\",\n    icon: <DynamicFeedIcon />,\n    path: \"/library/tools\",\n    component: LibraryTools,\n  },\n];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    height: \"48px\",\n    zIndex: theme.zIndex.drawer + 1,\n    position: \"sticky\",\n    top: 0,\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [tabIndex, setTabIndex] = useRecoilState(tabIndexState);\n\n  const handleChange = (event, newValue) => {\n    setTabIndex(newValue);\n  };\n\n  return (\n    <HashRouter>\n      <Paper className={classes.root}>\n        <Tabs\n          value={tabIndex}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          centered\n        >\n          {tabs.map((tab, index) => {\n            return (\n              <Tab\n                label={tab.label}\n                index={index}\n                to={tab.path}\n                component={Link}\n              />\n            );\n          })}\n        </Tabs>\n      </Paper>\n      <Switch>\n        <Route\n          path=\"/library\"\n          render={(props) => <Library {...props} routes={libraryRoutes} />}\n        />\n        <Route exact path=\"/reader\" component={Reader} />\n        <Redirect path=\"/\" to=\"/library/catelogue\" />\n      </Switch>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","H:\\Repositories\\electron-reader\\src\\components\\library\\Library.js",[],"H:\\Repositories\\electron-reader\\src\\components\\reader\\Reader.js",[],"H:\\Repositories\\electron-reader\\src\\components\\library\\tools\\LibraryTools.js",[],"H:\\Repositories\\electron-reader\\src\\recoil\\atoms.js",["109","110","111","112"],"import {\r\n  atom,\r\n  atomFamily,\r\n  selector,\r\n  selectorFamily,\r\n  useRecoilCallback,\r\n  useSetRecoilState,\r\n} from \"recoil\";\r\nimport { ThemeConsumer } from \"styled-components\";\r\n\r\nfunction createConsoleEntry(text) {\r\n  return { date: new Date().toLocaleString(), text: text };\r\n}\r\n\r\nexport const tabIndexState = atom({\r\n  key: \"tabIndexState\", // unique ID (with respect to other atoms/selectors)\r\n  default: 0, // default value (aka initial value)\r\n});\r\n\r\nexport const catelogueBookState = atom({\r\n  key: \"catelogueBookState\", // unique ID (with respect to other atoms/selectors)\r\n  default: [], // default value (aka initial value)\r\n});\r\n\r\nexport const invalidateCacheState = atom({\r\n  key: \"invalidateCacheState\",\r\n  default: 0,\r\n});\r\n\r\nexport const currentBookState = atom({\r\n  key: \"currentBookState\",\r\n  default: null,\r\n});\r\n\r\nexport const catelogueStateSelector = selector({\r\n  key: \"catelogueStateSelector\",\r\n  get: async ({ get }) => {\r\n    get(invalidateCacheState);\r\n    const response = await fetch(\"http://localhost:5050/book\");\r\n    if (response.error) {\r\n      throw response.error;\r\n    }\r\n\r\n    const json = await response.json();\r\n    return json.data;\r\n  },\r\n});\r\n\r\nexport const catelogueItemStateSelector = selector({\r\n  key: \"catelogueItemStateSelector\",\r\n  get: async ({ get }) => {\r\n    const { id } = get(currentBookState);\r\n\r\n    if (!id) return null;\r\n\r\n    const response = await fetch(`http://localhost:5050/book/${id}`);\r\n    if (response.error) {\r\n      throw response.error;\r\n    }\r\n    return response.json().data;\r\n  },\r\n});\r\n\r\nexport function useInvalidateCache() {\r\n  const setInvalidateCacheState = useSetRecoilState(invalidateCacheState);\r\n  return () => {\r\n    setInvalidateCacheState((key) => key + 1);\r\n  };\r\n}\r\n\r\nexport const catelogueBookFirstEntrySelector = selector({\r\n  key: \"catelogueBookFirstEntrySelector\",\r\n  get: ({ get }) => [get(catelogueBookState)],\r\n  set: ({ get, set }, book) =>\r\n    set(catelogueBookState, [book, ...get(catelogueBookState)]),\r\n});\r\n\r\nexport const libraryConsoleExpandedState = atom({\r\n  key: \"libraryConsoleExpandedState\", // unique ID (with respect to other atoms/selectors)\r\n  default: false, // default value (aka initial value)\r\n});\r\n\r\nexport const consoleState = atom({\r\n  key: \"consoleState\",\r\n  default: [createConsoleEntry(\"Initializing console...\")],\r\n});\r\nexport const consoleCountStateSelector = selector({\r\n  key: \"consoleCountStateSelector\",\r\n  get: ({ get }) => {\r\n    const console = get(consoleState);\r\n\r\n    return console.length;\r\n  },\r\n});\r\n\r\nexport const consoleFirstEntrySelector = selector({\r\n  key: \"consoleFirstEntrySelector\",\r\n  get: ({ get }) => [get(consoleState)],\r\n  set: ({ get, set }, text) =>\r\n    set(consoleState, [createConsoleEntry(text), ...get(consoleState)]),\r\n});\r\n\r\nexport const consoleLogSelector = selector({\r\n  key: \"consoleLogSelector\",\r\n  set: ({ get, set }, text) =>\r\n    set(consoleState, [createConsoleEntry(text), ...get(consoleState)]),\r\n});\r\n\r\nexport const consoleLogNavigationSelector = selector({\r\n  key: \"consoleLogNavigationSelector\",\r\n  set: ({ get, set }, text) =>\r\n    set(consoleState, [\r\n      createConsoleEntry(`Navigated to new route: ${text}.`),\r\n      ...get(consoleState),\r\n    ]),\r\n});\r\n\r\nexport const consoleLogFilepathSelector = selector({\r\n  key: \"consoleLogFilepathSelector\",\r\n  set: ({ get, set }, path) =>\r\n    set(consoleState, [\r\n      createConsoleEntry(`Found filepath: ${path}.`),\r\n      ...get(consoleState),\r\n    ]),\r\n});\r\n\r\nexport const consoleLogBookSelector = selector({\r\n  key: \"consoleLogBookSelector\",\r\n  set: ({ get, set }, book) =>\r\n    set(consoleState, [\r\n      createConsoleEntry(`Imported book: ${book.title}.`),\r\n      ...get(consoleState),\r\n    ]),\r\n});\r\n","H:\\Repositories\\electron-reader\\src\\components\\library\\catelogue\\LibraryCatelogue.js",["113"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\nimport { catelogueStateSelector } from \"../../../recoil/atoms\";\r\nimport Page from \"../../Page\";\r\nimport { EnhancedTableToolbar } from \"../../toolbar/EnhancedTableToolbar\";\r\nimport ActionPanel from \"./ActionPanel\";\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"title\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"Title\",\r\n  },\r\n  { id: \"author\", numeric: false, disablePadding: false, label: \"Author\" },\r\n  { id: \"subject\", numeric: false, disablePadding: false, label: \"Subject\" },\r\n  {\r\n    id: \"actions\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"\",\r\n  },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const {\r\n    classes,\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n  } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ \"aria-label\": \"select all books\" }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? \"right\" : \"left\"}\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function LibraryCatelogue() {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"calories\");\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const books = useRecoilValue(catelogueStateSelector);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = books.map((n) => n.title);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, title) => {\r\n    const selectedIndex = selected.indexOf(title);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, title);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (title) => selected.indexOf(title) !== -1;\r\n\r\n  const emptyRows =\r\n    rowsPerPage - Math.min(rowsPerPage, books.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <>\r\n      <Page>\r\n        <EnhancedTableToolbar\r\n          numSelected={selected.length}\r\n          title=\"Catelogue\"\r\n          showTooltip={true}\r\n        />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? \"small\" : \"medium\"}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={books.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(books, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((book, index) => {\r\n                  const isItemSelected = isSelected(book.id);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, book.id)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={book.id}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ \"aria-labelledby\": labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell\r\n                        component=\"th\"\r\n                        id={labelId}\r\n                        scope=\"row\"\r\n                        padding=\"none\"\r\n                      >\r\n                        {book.title}\r\n                      </TableCell>\r\n                      <TableCell align=\"left\">{book.author}</TableCell>\r\n                      <TableCell align=\"left\">{book.subject}</TableCell>\r\n                      <TableCell align=\"right\">\r\n                        <ActionPanel book={book} />\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={books.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Page>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      />\r\n    </>\r\n  );\r\n}\r\n","H:\\Repositories\\electron-reader\\src\\components\\library\\tools\\ScanDirectoryCard.js",["114"],"import React from \"react\";\r\n\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nimport Page from \"../../Page\";\r\nimport OpenDirectoryButton from \"../../native/OpenDirectoryButton\";\r\nimport PageHeaderToolbar from \"../../toolbar/PageHeaderToolbar\";\r\nimport SimplePageToolbar from \"../../toolbar/SimplePageToolbar\";\r\n\r\nexport default function ScanDirectoryCard({ bodyClass }) {\r\n  return (\r\n    <Page>\r\n      <SimplePageToolbar title=\"Scan Directory\" variant=\"h6\" />\r\n      <div className={bodyClass}>\r\n        <Typography variant=\"body1\">\r\n          Scan local folders for .epub files to import them into your library\r\n          catelogue.\r\n        </Typography>\r\n        <br />\r\n        <OpenDirectoryButton />\r\n      </div>\r\n    </Page>\r\n  );\r\n}\r\n","H:\\Repositories\\electron-reader\\src\\components\\Page.js",[],"H:\\Repositories\\electron-reader\\src\\components\\library\\tools\\ImportBookCard.js",[],"H:\\Repositories\\electron-reader\\src\\components\\library\\LibraryContainer.js",["115"],"import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport LibraryFooter from \"./LibraryFooter\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport { consoleLogNavigationSelector } from \"../../recoil/atoms\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    top: \"49px\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  footer: {\r\n    position: \"fixed\",\r\n    bottom: 0,\r\n    left: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n  },\r\n}));\r\n\r\nexport default function LibraryContainer({ routes, children }) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const consoleLog = useSetRecoilState(consoleLogNavigationSelector);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n        anchor=\"left\"\r\n      >\r\n        <List>\r\n          {routes.map((route, index) => (\r\n            <ListItem\r\n              key={index}\r\n              button\r\n              key={route.label}\r\n              onClick={() => {\r\n                consoleLog(route.path);\r\n                history.push(route.path);\r\n              }}\r\n            >\r\n              <ListItemIcon>{route.icon}</ListItemIcon>\r\n              <ListItemText primary={route.label} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <React.Suspense fallback={\"Loading\"}>{children}</React.Suspense>\r\n      </main>\r\n      <div className={classes.footer}>\r\n        <LibraryFooter />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","H:\\Repositories\\electron-reader\\src\\components\\toolbar\\PageHeaderToolbar.js",[],"H:\\Repositories\\electron-reader\\src\\components\\toolbar\\EnhancedTableToolbar.js",[],"H:\\Repositories\\electron-reader\\src\\components\\toolbar\\SimplePageToolbar.js",[],"H:\\Repositories\\electron-reader\\src\\components\\library\\LibraryFooter.js",[],"H:\\Repositories\\electron-reader\\src\\components\\native\\OpenDirectoryButton.js",[],"H:\\Repositories\\electron-reader\\src\\components\\toolbar\\useToolbarStyles.js",[],"H:\\Repositories\\electron-reader\\src\\components\\native\\OpenBookButton.js",[],"H:\\Repositories\\electron-reader\\src\\components\\toolbar\\PageToolbar.js",["116","117","118","119","120","121"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport useToolbarStyles from \"./useToolbarStyles\";\r\n\r\nexport const PageToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { title, variant } = props;\r\n\r\n  return (\r\n    <Toolbar>\r\n      <Typography\r\n        className={classes.title}\r\n        variant={variant}\r\n        id=\"tableTitle\"\r\n        component=\"div\"\r\n      >\r\n        {title}\r\n      </Typography>\r\n    </Toolbar>\r\n  );\r\n};\r\n","H:\\Repositories\\electron-reader\\src\\components\\library\\Console.js",["122"],"import React from \"react\";\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\nimport { consoleState } from \"../../recoil/atoms\";\r\n\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nexport default function Console() {\r\n  const consoleItems = useRecoilValue(consoleState);\r\n\r\n  return (\r\n    <div>\r\n      {consoleItems.map((item) => {\r\n        return (\r\n          <div>\r\n            <Typography variant=\"caption\">{`[${item.date}] ${item.text}`}</Typography>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n","H:\\Repositories\\electron-reader\\src\\components\\native\\OpenFileSystemButton.js",[],"H:\\Repositories\\electron-reader\\src\\components\\native\\OpenFileButton.js",["123","124"],"import React from \"react\";\r\nimport OpenFileSystemButton from \"./OpenFileSystemButton\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport { consoleLogFilepathSelector } from \"../../recoil/atoms\";\r\n\r\nexport default function OpenFileButton({ filters, callback }) {\r\n  return (\r\n    <OpenFileSystemButton\r\n      title=\"Open File\"\r\n      message=\"Select an e-reader file.\"\r\n      text=\"Select File\"\r\n      properties={[\"openFile\"]}\r\n      callback={callback}\r\n      filters={filters}\r\n    />\r\n  );\r\n}\r\n","H:\\Repositories\\electron-reader\\src\\components\\library\\catelogue\\ActionPanel.js",[],{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":4,"column":3,"nodeType":"131","messageId":"132","endLine":4,"endColumn":13},{"ruleId":"129","severity":1,"message":"133","line":5,"column":3,"nodeType":"131","messageId":"132","endLine":5,"endColumn":7},{"ruleId":"129","severity":1,"message":"134","line":6,"column":3,"nodeType":"131","messageId":"132","endLine":6,"endColumn":11},{"ruleId":"129","severity":1,"message":"135","line":8,"column":3,"nodeType":"131","messageId":"132","endLine":8,"endColumn":17},{"ruleId":"129","severity":1,"message":"136","line":3,"column":3,"nodeType":"131","messageId":"132","endLine":3,"endColumn":13},{"ruleId":"129","severity":1,"message":"137","line":5,"column":3,"nodeType":"131","messageId":"132","endLine":5,"endColumn":17},{"ruleId":"129","severity":1,"message":"138","line":6,"column":3,"nodeType":"131","messageId":"132","endLine":6,"endColumn":20},{"ruleId":"129","severity":1,"message":"139","line":9,"column":10,"nodeType":"131","messageId":"132","endLine":9,"endColumn":23},{"ruleId":"129","severity":1,"message":"140","line":15,"column":10,"nodeType":"131","messageId":"132","endLine":15,"endColumn":24},{"ruleId":"129","severity":1,"message":"141","line":7,"column":8,"nodeType":"131","messageId":"132","endLine":7,"endColumn":25},{"ruleId":"142","severity":1,"message":"143","line":66,"column":15,"nodeType":"144","endLine":66,"endColumn":32},{"ruleId":"129","severity":1,"message":"145","line":2,"column":8,"nodeType":"131","messageId":"132","endLine":2,"endColumn":17},{"ruleId":"129","severity":1,"message":"146","line":3,"column":8,"nodeType":"131","messageId":"132","endLine":3,"endColumn":12},{"ruleId":"129","severity":1,"message":"147","line":6,"column":8,"nodeType":"131","messageId":"132","endLine":6,"endColumn":18},{"ruleId":"129","severity":1,"message":"148","line":7,"column":8,"nodeType":"131","messageId":"132","endLine":7,"endColumn":15},{"ruleId":"129","severity":1,"message":"149","line":8,"column":8,"nodeType":"131","messageId":"132","endLine":8,"endColumn":18},{"ruleId":"129","severity":1,"message":"150","line":9,"column":8,"nodeType":"131","messageId":"132","endLine":9,"endColumn":22},{"ruleId":"129","severity":1,"message":"140","line":2,"column":10,"nodeType":"131","messageId":"132","endLine":2,"endColumn":24},{"ruleId":"129","severity":1,"message":"151","line":3,"column":10,"nodeType":"131","messageId":"132","endLine":3,"endColumn":27},{"ruleId":"129","severity":1,"message":"152","line":4,"column":10,"nodeType":"131","messageId":"132","endLine":4,"endColumn":36},"no-native-reassign",["153"],"no-negated-in-lhs",["154"],"no-unused-vars","'RecoilRoot' is defined but never used.","Identifier","unusedVar","'atom' is defined but never used.","'selector' is defined but never used.","'useRecoilValue' is defined but never used.","'atomFamily' is defined but never used.","'selectorFamily' is defined but never used.","'useRecoilCallback' is defined but never used.","'ThemeConsumer' is defined but never used.","'useRecoilState' is defined but never used.","'PageHeaderToolbar' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'PropTypes' is defined but never used.","'clsx' is defined but never used.","'IconButton' is defined but never used.","'Tooltip' is defined but never used.","'DeleteIcon' is defined but never used.","'FilterListIcon' is defined but never used.","'useSetRecoilState' is defined but never used.","'consoleLogFilepathSelector' is defined but never used.","no-global-assign","no-unsafe-negation"]